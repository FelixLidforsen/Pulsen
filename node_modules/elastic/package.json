{
  "_from": "elastic",
  "_id": "elastic@0.1.10",
  "_inBundle": false,
  "_integrity": "sha1-7h3+GmtdEGPj2O/cUkmtips/YHk=",
  "_location": "/elastic",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "elastic",
    "name": "elastic",
    "escapedName": "elastic",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/elastic/-/elastic-0.1.10.tgz",
  "_shasum": "ee1dfe1a6b5d1063e3d8efdc5249ad8a9b3f6079",
  "_spec": "elastic",
  "_where": "/Users/erik/Documents/GitHub/Pulsen",
  "bundleDependencies": false,
  "dependencies": {
    "async": "0.1.x",
    "express": "3.0.x",
    "moment": "1.7.x",
    "s3": "0.0.4"
  },
  "deprecated": false,
  "description": "## How do I use this? Here's a sample.  Run this code somewhere and you'll contact Amazon, create a HTTP service cluster with load balancer, wire it all up, set up firewalls and start serving requests!  All you need to start are the keys and cert from your EC2 account, a keypair in your account, and an AMI that launches apache on boot.",
  "engines": {
    "node": "0.8.x",
    "npm": "1.1.x"
  },
  "name": "elastic",
  "version": "0.1.10",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.8.x",
        "npm": "1.1.x"
      },
      "pkgid": "elastic@0.1.10"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.8.x",
        "npm": "1.1.x"
      },
      "pkgid": "elastic@0.1.10"
    }
  ]
}
