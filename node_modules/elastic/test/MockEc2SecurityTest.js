process.env.JAVA_HOME = '/System/Library/Frameworks/JavaVM.framework/Home/'; 
process.env.EC2_PRIVATE_KEY = __dirname + '/keys/pk-TQ2TH4KSYVEHHGJJG5KMQX5PLU662GQA.pem';
process.env.EC2_CERT = __dirname + '/keys/cert-TQ2TH4KSYVEHHGJJG5KMQX5PLU662GQA.pem';


var assert = require( 'assert' );

/*describe( 'Ec2Client', function() {
	describe( 'getSecurityGroups', function() {
		this.timeout( 10000 );
		var elastic = new( require( '../index.js' ))();
		it( 'should return data about the running instances', function( done ) {
			elastic.getEc2Client().getSecurityGroups( 'us-east-1', function( error, result ) {
				assert.equal( null, error );
				console.log( result );

				/* 
						 [ { id: 'sg-d4dba9bc', name: 'default', description: 'd' },
  { id: 'sg-7c4f1414', name: 'Nova', description: 'C' },
  { id: 'sg-6cc0b204', name: 'EngineFE', description: 'E' },
  { id: 'sg-708df718', name: 'EngineDM', description: 'E' },
  { id: 'sg-3eaa8156',
    name: 'test-cluster-group',
    description: 't' },
  { id: 'sg-68517200', name: 'Solr-Dev', description: 'S' },
  { id: 'sg-1ad8aa72', name: 'EngineDB', description: 'E' },
  { id: 'sg-4c89f024', name: 'EngineNLP', description: 'N' } ]
						    */
/*				done();
			});
		});
	});
	describe( 'createSecurityGroup', function() {
		this.timeout( 10000 );
		var elastic = new( require( '../index.js' ))();
		it( 'should return data about the new security group', function( done ) {
			elastic.getEc2Client().createSecurityGroup( 'us-east-1', 'testGroup2', function( error, result ) {
				assert.equal( null, error );
				console.log( result );

				/* 
						 [ { id: 'sg-111c0479',
						    name: 'testGroup2',
						    description: 'testGroup2' } ]
			    */
/*				done();
			});
		});
	});
}); */

describe( 'MockEc2Client', function() {
	describe( 'createSecurityGroup', function() {
		it( 'adds a security group', function( done ) {
			var elastic = new( require( '../index.js' ))();
			var mockClient = new( require( './mocks/MockEc2Client' ))();
			elastic.setEc2Client( mockClient );

			var groupName = 'new_group';
			elastic.getEc2Client().createSecurityGroup( 'us-east-1', groupName, function( error, result ) {
				assert.equal( null, error );
				assert.equal( groupName, result[0].name );
				assert.ok( result[0].id );
				done();
			});
		});
	} );
});